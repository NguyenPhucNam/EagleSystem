{"version":3,"sources":["webpack:///./src/app/upload/main-upload/upload.component.html","webpack:///./src/app/pipe/percent.pipe.ts","webpack:///./src/app/upload/main-upload/upload.component.css","webpack:///./src/app/upload/main-upload/upload.component.ts","webpack:///./src/app/upload/upload-routing.module.ts","webpack:///./src/app/upload/upload.module.ts"],"names":[],"mappings":"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","file":"src-app-upload-upload-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"container-fuild\\\">\\r\\n\\r\\n    <div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly stretch\\\">\\r\\n        <h1 mat-dialog-title class=\\\"my-2 text-center\\\">Upload Files</h1>\\r\\n        <div class=\\\"outside\\\">\\r\\n            <div class=\\\"inside position-relative\\\">\\r\\n                <div id=\\\"drop_zone\\\">Drop files here</div>\\r\\n                <input type=\\\"file\\\" #file class=\\\"hide position-absolute w-100\\\"\\r\\n                    (change)=\\\"onChange($event)\\\" multiple [disabled]=\\\"acceptUpload\\\"/>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"my-1\\\"\\r\\n            mat-raised-button color=\\\"primary\\\"\\r\\n            [disabled]=\\\"!uploading\\\" (click)=\\\"upload()\\\">\\r\\n            {{ primaryButtonText }}\\r\\n        </button>\\r\\n        <button class=\\\"my-1\\\"\\r\\n            mat-raised-button [disabled]=\\\"!showResetButton\\\"\\r\\n            color=\\\"success\\\" (click)=\\\"onReset()\\\">\\r\\n            Reset\\r\\n        </button>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"wrapper\\\">\\r\\n        <mat-list>\\r\\n            <h3 mat-subheader>Upload Files \\r\\n                <span class=\\\"w-100 text-right\\\">Total: {{ (files.size) ? files.size : 0 }} files</span>\\r\\n            </h3>\\r\\n            <div class=\\\"content_zone\\\">\\r\\n                <ng-container *ngFor=\\\"let file of files; trackBy: trackByFn\\\">\\r\\n                    <mat-list-item>\\r\\n                        <mat-icon mat-list-icon>note</mat-icon>\\r\\n                        <h4 mat-line>{{file.name}}</h4>\\r\\n                        <p *ngIf=\\\"progress && !uploading\\\" mat-line class=\\\"percent\\\"> {{ (progress[file.name]?.progress | async) | percentcustom }}</p>\\r\\n                        <div mat-line>\\r\\n                            <mat-progress-bar\\r\\n                                *ngIf=\\\"progress && !uploading\\\"\\r\\n                                mode=\\\"determinate\\\"\\r\\n                                [value]=\\\"progress[file.name]?.progress | async\\\">\\r\\n                            </mat-progress-bar>\\r\\n                        </div>\\r\\n                    </mat-list-item>\\r\\n                    <mat-divider></mat-divider>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <mat-divider></mat-divider>\\r\\n            <h3 mat-subheader>Folders\\r\\n                <span class=\\\"w-100 text-right\\\">Total: {{ (sysFiles.size) ? sysFiles.size : 0 }} folders</span>\\r\\n            </h3>\\r\\n            <div class=\\\"content_zone\\\">\\r\\n                <ng-container *ngFor=\\\"let file of sysFiles; trackBy: trackByFn\\\">\\r\\n                    <mat-list-item>\\r\\n                        <mat-icon mat-list-icon>folder</mat-icon>\\r\\n                        <h4 mat-line>{{ file }}</h4>\\r\\n                        <p mat-line> {{ today | date }} </p>\\r\\n                        <ng-container [ngTemplateOutlet]=\\\"menuFile\\\"\\r\\n                            [ngTemplateOutletContext]=\\\"{ file: file }\\\">\\r\\n                        </ng-container>\\r\\n                    </mat-list-item>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </mat-list>\\r\\n    </div>\\r\\n    <br>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #menuFile let-file=\\\"file\\\">\\r\\n    <div class=\\\"w-100 text-right\\\">\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"menu\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n        </button>\\r\\n        <mat-menu xPosition=\\\"before\\\" #menu=\\\"matMenu\\\">\\r\\n            <a class=\\\"text-decoration-none text-dark\\\" \\r\\n                [href]=\\\"fileUrl + file\\\" target=\\\"_blank\\\" \\r\\n                mat-menu-item \\r\\n                download=\\\"{{ file }}\\\">\\r\\n                <mat-icon>save_alt</mat-icon>\\r\\n                <span>DOWNLOAD</span>\\r\\n            </a>\\r\\n            <a  class=\\\"text-decoration-none text-dark\\\" \\r\\n                mat-menu-item routerLink=\\\"/storages\\\">\\r\\n                <mat-icon>visibility</mat-icon>\\r\\n                <span>PREVIEW</span>\\r\\n            </a>\\r\\n            <button mat-menu-item (click)=\\\"onDelete(file)\\\">\\r\\n                <mat-icon>delete_sweep</mat-icon>\\r\\n                <span>DELETE</span>\\r\\n            </button>\\r\\n        </mat-menu>\\r\\n    </div>\\r\\n</ng-template>\"","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'percentcustom'\n})\nexport class PercentPipe implements PipeTransform {\n\n  transform(value: number, ...args: any[]): string {\n    if(value) {\n      return (value === 100) ? `${value}% (Finish !!!)` : `${value}%`;\n    } else {\n      return `${0}%`\n    }\n  }\n\n}\n","module.exports = \".outside {\\r\\n    overflow: hidden;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n}\\r\\n\\r\\n.inside, input[type='file'] {\\r\\n    border: 2px dashed #bbb;\\r\\n    -moz-border-radius: 5px;\\r\\n    -webkit-border-radius: 5px;\\r\\n    padding: 5em 0;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    font: 20pt bold 'Vollkorn';\\r\\n    color: #bbb;\\r\\n}\\r\\n\\r\\n.drop_zone {\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.drop_zone {\\r\\n    padding: 5em 0;\\r\\n}\\r\\n\\r\\ninput[type='file'] {\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.content_zone {\\r\\n    max-height: 35vh;\\r\\n    overflow-y: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBsb2FkL21haW4tdXBsb2FkL3VwbG9hZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLDBCQUEwQjtJQUMxQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvdXBsb2FkL21haW4tdXBsb2FkL3VwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm91dHNpZGUge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG59XHJcblxyXG4uaW5zaWRlLCBpbnB1dFt0eXBlPSdmaWxlJ10ge1xyXG4gICAgYm9yZGVyOiAycHggZGFzaGVkICNiYmI7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogNWVtIDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250OiAyMHB0IGJvbGQgJ1ZvbGxrb3JuJztcclxuICAgIGNvbG9yOiAjYmJiO1xyXG59XHJcblxyXG4uZHJvcF96b25lIHtcclxuICAgIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi5kcm9wX3pvbmUge1xyXG4gICAgcGFkZGluZzogNWVtIDA7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9J2ZpbGUnXSB7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY29udGVudF96b25lIHtcclxuICAgIG1heC1oZWlnaHQ6IDM1dmg7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { WebWorker } from 'src/app/shared/web-worker/index.worker';\nimport { forkJoin } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { UploadService } from 'src/app/upload/main-upload/upload.service';\nimport { AlertComponent } from 'src/app/alert/alert.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { StorageService } from 'src/app/storage/main-storage/storage.service';\nimport { environment } from 'src/environments/environment';\nimport { ResponseJSON } from 'src/app/storage/main-storage/storage.model';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n  @ViewChild('file', { static: true }) file;\n  fileUrl: string = `${environment.api}/storages/download?filename=`;\n  files: Set<File> = new Set();\n  sysFiles: Set<string> = new Set();\n  progress: any;\n  primaryButtonText: string = 'Upload';\n  showResetButton: boolean = false;\n  uploading: boolean = false;\n  acceptUpload: boolean = false;\n  today: number = Date.now();\n  \n  constructor(private _uploadService: UploadService,\n    private _storageService: StorageService,\n    private _snackBar: MatSnackBar) {}\n    \n  ngOnInit() {\n    this.onGetFiles();\n  }\n\n  onFn(message: string) {\n    this._snackBar.openFromComponent(AlertComponent, {\n      duration: 3 * 1000,\n      data: { message: message, action: 'Upload' }\n    });\n  }\n\n  onReset() {\n    this.uploading = false;\n    this.acceptUpload = false;\n    this.showResetButton = false;\n    this.primaryButtonText = 'Upload';\n    this.file.nativeElement.value = '';\n    this.files.clear();\n  }\n\n  onGetFiles(): void {\n    this.file.nativeElement.value = '';\n    this._storageService.getStorages()\n    .pipe(debounceTime(1000), distinctUntilChanged())\n    .subscribe(\n      (res: string[]) => {\n        for (let name of res) {\n          this.sysFiles.add(name);\n        }\n    });\n  }\n\n  onChange(e: Event): void {\n    this.uploading = true;\n    this.showResetButton = true;\n    const files: { [key: string]: File } = this.file.nativeElement.files;\n    for (let key in files) {\n      if (!isNaN(parseInt(key))) {\n        this.files.add(files[key]);\n      }\n    }\n  }\n\n  upload() {\n    this.uploading = false;\n    this.acceptUpload = true;\n    this.showResetButton = false;\n    // start the upload and save the progress map\n    this.progress = this._uploadService.upload(this.files);\n\n    // convert the progress map into an array\n    const allProgressObservables = [];\n    for (let key in this.progress) {\n      allProgressObservables.push(this.progress[key].progress);\n    }\n\n    // When all progress-observables are completed...\n    forkJoin(allProgressObservables)\n    .subscribe(end => {\n      this.onFn('Finish !!!');\n      this.onGetFiles();\n      // The OK-button should have the text \"Finish\" now\n      this.primaryButtonText = 'Finish';\n      \n      // ... the dialog can be closed again...\n      this.showResetButton = true;\n    });\n  }\n\n  onDelete(name: string) {\n    this._storageService.deleteFile(name)\n    .pipe(debounceTime(1000), distinctUntilChanged())\n    .subscribe(\n      (res: ResponseJSON) => {\n        this.sysFiles.delete(name);\n        this.onFn(res.message);\n      },\n      error => this.onFn(error)\n    );\n  }\n\n  trackByFn(index, item) {\n    return item; // or item.id\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadComponent } from './main-upload/upload.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', \r\n        component: UploadComponent, \r\n        data: { title: 'Upload' }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class UploadRoutingModule { }\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './main-upload/upload.component';\nimport { UploadRoutingModule } from './upload-routing.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PercentPipe } from 'src/app/pipe/percent.pipe';\nimport { MaterialModule } from 'src/app/shared/material/material-module';\n\n@NgModule({\n  declarations: [UploadComponent, PercentPipe],\n  imports: [\n    CommonModule,\n    UploadRoutingModule,\n    FlexLayoutModule,\n    MaterialModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UploadModule {}\n"],"sourceRoot":""}